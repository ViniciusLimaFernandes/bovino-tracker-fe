{
  "version": 3,
  "sources": ["../../vuetify/src/components/VAlert/VAlert.tsx", "../../vuetify/src/components/VAlert/VAlertTitle.ts"],
  "sourcesContent": ["// Styles\nimport './VAlert.sass'\n\n// Components\nimport { VAlertTitle } from './VAlertTitle'\nimport { VBtn } from '@/components/VBtn'\nimport { VDefaultsProvider } from '@/components/VDefaultsProvider'\nimport { VIcon } from '@/components/VIcon'\n\n// Composables\nimport { genOverlays, makeVariantProps, useVariant } from '@/composables/variant'\nimport { makeDensityProps, useDensity } from '@/composables/density'\nimport { makeDimensionProps, useDimension } from '@/composables/dimensions'\nimport { makeElevationProps, useElevation } from '@/composables/elevation'\nimport { makeLocationProps, useLocation } from '@/composables/location'\nimport { makePositionProps, usePosition } from '@/composables/position'\nimport { makeRoundedProps, useRounded } from '@/composables/rounded'\nimport { makeTagProps } from '@/composables/tag'\nimport { makeThemeProps, provideTheme } from '@/composables/theme'\nimport { useLocale } from '@/composables/locale'\nimport { useProxiedModel } from '@/composables/proxiedModel'\nimport { useTextColor } from '@/composables/color'\nimport { IconValue } from '@/composables/icons'\n\n// Utilities\nimport { computed, toRef } from 'vue'\nimport { defineComponent } from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\n\nconst allowedTypes = ['success', 'info', 'warning', 'error'] as const\n\ntype ContextualType = typeof allowedTypes[number]\n\nexport const VAlert = defineComponent({\n  name: 'VAlert',\n\n  props: {\n    border: {\n      type: [Boolean, String],\n      validator: (val: boolean | string) => {\n        return typeof val === 'boolean' || [\n          'top',\n          'end',\n          'bottom',\n          'start',\n        ].includes(val)\n      },\n    },\n    borderColor: String,\n    closable: Boolean,\n    closeIcon: {\n      type: IconValue,\n      default: '$close',\n    },\n    closeLabel: {\n      type: String,\n      default: '$vuetify.close',\n    },\n    icon: {\n      type: [Boolean, String, Function, Object] as PropType<false | IconValue>,\n      default: null,\n    },\n    modelValue: {\n      type: Boolean,\n      default: true,\n    },\n    prominent: Boolean,\n    title: String,\n    text: String,\n    type: {\n      type: String as PropType<ContextualType>,\n      validator: (val: ContextualType) => allowedTypes.includes(val),\n    },\n\n    ...makeDensityProps(),\n    ...makeDimensionProps(),\n    ...makeElevationProps(),\n    ...makeLocationProps(),\n    ...makePositionProps(),\n    ...makeRoundedProps(),\n    ...makeTagProps(),\n    ...makeThemeProps(),\n    ...makeVariantProps({ variant: 'flat' } as const),\n  },\n\n  emits: {\n    'update:modelValue': (value: boolean) => true,\n  },\n\n  setup (props, { slots }) {\n    const isActive = useProxiedModel(props, 'modelValue')\n    const icon = computed(() => {\n      if (props.icon === false) return undefined\n      if (!props.type) return props.icon\n\n      return props.icon ?? `$${props.type}`\n    })\n    const variantProps = computed(() => ({\n      color: props.color ?? props.type,\n      variant: props.variant,\n    }))\n\n    const { themeClasses } = provideTheme(props)\n    const { colorClasses, colorStyles, variantClasses } = useVariant(variantProps)\n    const { densityClasses } = useDensity(props)\n    const { dimensionStyles } = useDimension(props)\n    const { elevationClasses } = useElevation(props)\n    const { locationStyles } = useLocation(props)\n    const { positionClasses } = usePosition(props)\n    const { roundedClasses } = useRounded(props)\n    const { textColorClasses, textColorStyles } = useTextColor(toRef(props, 'borderColor'))\n    const { t } = useLocale()\n\n    const closeProps = computed(() => ({\n      'aria-label': t(props.closeLabel),\n      onClick (e: MouseEvent) {\n        isActive.value = false\n      },\n    }))\n\n    return () => {\n      const hasPrepend = !!(slots.prepend || icon.value)\n      const hasTitle = !!(slots.title || props.title)\n      const hasText = !!(props.text || slots.text)\n      const hasClose = !!(slots.close || props.closable)\n\n      return isActive.value && (\n        <props.tag\n          class={[\n            'v-alert',\n            props.border && {\n              'v-alert--border': !!props.border,\n              [`v-alert--border-${props.border === true ? 'start' : props.border}`]: true,\n            },\n            {\n              'v-alert--prominent': props.prominent,\n            },\n            themeClasses.value,\n            colorClasses.value,\n            densityClasses.value,\n            elevationClasses.value,\n            positionClasses.value,\n            roundedClasses.value,\n            variantClasses.value,\n          ]}\n          style={[\n            colorStyles.value,\n            dimensionStyles.value,\n            locationStyles.value,\n          ]}\n          role=\"alert\"\n        >\n          { genOverlays(false, 'v-alert') }\n\n          { props.border && (\n            <div\n              key=\"border\"\n              class={[\n                'v-alert__border',\n                textColorClasses.value,\n              ]}\n              style={ textColorStyles.value }\n            />\n          ) }\n\n          { hasPrepend && (\n            <VDefaultsProvider\n              key=\"prepend\"\n              defaults={{\n                VIcon: {\n                  density: props.density,\n                  icon: icon.value,\n                  size: props.prominent ? 44 : 28,\n                },\n              }}\n            >\n              <div class=\"v-alert__prepend\">\n                { slots.prepend\n                  ? slots.prepend()\n                  : icon.value && (<VIcon />)\n                }\n              </div>\n            </VDefaultsProvider>\n          ) }\n\n          <div class=\"v-alert__content\">\n            { hasTitle && (\n              <VAlertTitle key=\"title\">\n                { slots.title ? slots.title() : props.title }\n              </VAlertTitle>\n            ) }\n\n            { hasText && (\n              slots.text ? slots.text() : props.text\n            ) }\n\n            { slots.default?.() }\n          </div>\n\n          { slots.append && (\n            <div key=\"append\" class=\"v-alert__append\">\n              { slots.append() }\n            </div>\n          ) }\n\n          { hasClose && (\n            <VDefaultsProvider\n              key=\"close\"\n              defaults={{\n                VBtn: {\n                  icon: props.closeIcon,\n                  size: 'x-small',\n                  variant: 'text',\n                },\n              }}\n            >\n              <div class=\"v-alert__close\">\n                { slots.close?.({ props: closeProps.value }) ?? <VBtn { ...closeProps.value } /> }\n              </div>\n            </VDefaultsProvider>\n          ) }\n        </props.tag>\n      )\n    }\n  },\n})\n\nexport type VAlert = InstanceType<typeof VAlert>\n", "// Utilities\nimport { createSimpleFunctional } from '@/util'\n\nexport const VAlertTitle = createSimpleFunctional('v-alert-title')\n"],
  "mappings": "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",
  "names": ["VAlertTitle", "createSimpleFunctional", "allowedTypes", "VAlert", "defineComponent", "name", "props", "border", "type", "Boolean", "String", "validator", "val", "includes", "borderColor", "closable", "closeIcon", "IconValue", "default", "closeLabel", "icon", "Function", "Object", "modelValue", "prominent", "title", "text", "makeDensityProps", "makeDimensionProps", "makeElevationProps", "makeLocationProps", "makePositionProps", "makeRoundedProps", "makeTagProps", "makeThemeProps", "makeVariantProps", "variant", "emits", "value", "setup", "slots", "isActive", "useProxiedModel", "computed", "undefined", "variantProps", "color", "themeClasses", "provideTheme", "colorClasses", "colorStyles", "variantClasses", "useVariant", "densityClasses", "useDensity", "dimensionStyles", "useDimension", "elevationClasses", "useElevation", "locationStyles", "useLocation", "positionClasses", "usePosition", "roundedClasses", "useRounded", "textColorClasses", "textColorStyles", "useTextColor", "toRef", "t", "useLocale", "closeProps", "onClick", "e", "hasPrepend", "prepend", "hasTitle", "hasText", "hasClose", "close", "genOverlays", "VIcon", "density", "size", "append", "VBtn"]
}
