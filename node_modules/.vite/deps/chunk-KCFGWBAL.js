import {
  makeGroupProps,
  useGroup
} from "./chunk-EUJIYQYB.js";
import {
  makeVariantProps
} from "./chunk-IVS4Y3OH.js";
import {
  makeThemeProps,
  provideTheme
} from "./chunk-222VJEDK.js";
import {
  makeTagProps
} from "./chunk-IOMBK4NQ.js";
import {
  deepEqual,
  defineComponent,
  provideDefaults,
  useRender
} from "./chunk-A3CSDWP3.js";
import {
  createVNode,
  toRef
} from "./chunk-XDGY5WZM.js";

// node_modules/vuetify/lib/components/VChipGroup/VChipGroup.mjs
import "/home/vini/workspace/tcc-blockchain/node_modules/vuetify/lib/components/VChipGroup/VChipGroup.css";
var VChipGroupSymbol = Symbol.for("vuetify:v-chip-group");
var VChipGroup = defineComponent({
  name: "VChipGroup",
  props: {
    column: Boolean,
    filter: Boolean,
    valueComparator: {
      type: Function,
      default: deepEqual
    },
    ...makeGroupProps({
      selectedClass: "v-chip--selected"
    }),
    ...makeTagProps(),
    ...makeThemeProps(),
    ...makeVariantProps({
      variant: "tonal"
    })
  },
  emits: {
    "update:modelValue": (value) => true
  },
  setup(props, _ref) {
    let {
      slots
    } = _ref;
    const {
      themeClasses
    } = provideTheme(props);
    const {
      isSelected,
      select,
      next,
      prev,
      selected
    } = useGroup(props, VChipGroupSymbol);
    provideDefaults({
      VChip: {
        color: toRef(props, "color"),
        filter: toRef(props, "filter"),
        variant: toRef(props, "variant")
      }
    });
    useRender(() => {
      var _slots$default;
      return createVNode(props.tag, {
        "class": ["v-chip-group", {
          "v-chip-group--column": props.column
        }, themeClasses.value]
      }, {
        default: () => [(_slots$default = slots.default) == null ? void 0 : _slots$default.call(slots, {
          isSelected,
          select,
          next,
          prev,
          selected: selected.value
        })]
      });
    });
    return {};
  }
});

export {
  VChipGroupSymbol,
  VChipGroup
};
//# sourceMappingURL=chunk-KCFGWBAL.js.map
