{
  "version": 3,
  "sources": ["../../vuetify/src/components/VChipGroup/VChipGroup.tsx"],
  "sourcesContent": ["// Styles\nimport './VChipGroup.sass'\n\n// Composables\nimport { makeGroupProps, useGroup } from '@/composables/group'\nimport { makeTagProps } from '@/composables/tag'\nimport { makeThemeProps, provideTheme } from '@/composables/theme'\nimport { makeVariantProps } from '@/composables/variant'\nimport { provideDefaults } from '@/composables/defaults'\n\n// Utilities\nimport { deepEqual, defineComponent, useRender } from '@/util'\nimport { toRef } from 'vue'\n\n// Types\nimport type { PropType } from 'vue'\n\nexport const VChipGroupSymbol = Symbol.for('vuetify:v-chip-group')\n\nexport const VChipGroup = defineComponent({\n  name: 'VChipGroup',\n\n  props: {\n    column: Boolean,\n    filter: Boolean,\n    valueComparator: {\n      type: Function as PropType<typeof deepEqual>,\n      default: deepEqual,\n    },\n\n    ...makeGroupProps({ selectedClass: 'v-chip--selected' }),\n    ...makeTagProps(),\n    ...makeThemeProps(),\n    ...makeVariantProps({ variant: 'tonal' } as const),\n  },\n\n  emits: {\n    'update:modelValue': (value: any) => true,\n  },\n\n  setup (props, { slots }) {\n    const { themeClasses } = provideTheme(props)\n    const { isSelected, select, next, prev, selected } = useGroup(props, VChipGroupSymbol)\n\n    provideDefaults({\n      VChip: {\n        color: toRef(props, 'color'),\n        filter: toRef(props, 'filter'),\n        variant: toRef(props, 'variant'),\n      },\n    })\n\n    useRender(() => (\n      <props.tag\n        class={[\n          'v-chip-group',\n          {\n            'v-chip-group--column': props.column,\n          },\n          themeClasses.value,\n        ]}\n      >\n        { slots.default?.({\n          isSelected,\n          select,\n          next,\n          prev,\n          selected: selected.value,\n        }) }\n      </props.tag>\n    ))\n\n    return {}\n  },\n})\n\nexport type VChipGroup = InstanceType<typeof VChipGroup>\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;AACA,OAAA;AAgBO,IAAMA,mBAAmBC,OAAOC,IAAI,sBAAX;AAEzB,IAAMC,aAAaC,gBAAgB;EACxCC,MAAM;EAENC,OAAO;IACLC,QAAQC;IACRC,QAAQD;IACRE,iBAAiB;MACfC,MAAMC;MACNC,SAASC;IAFM;IAKjB,GAAGC,eAAe;MAAEC,eAAe;IAAjB,CAAD;IACjB,GAAGC,aAAY;IACf,GAAGC,eAAc;IACjB,GAAGC,iBAAiB;MAAEC,SAAS;IAAX,CAAD;EAXd;EAcPC,OAAO;IACL,qBAAsBC,WAAe;EADhC;EAIPC,MAAOjB,OAAF,MAAoB;AAAA,QAAX;MAAEkB;IAAF,IAAW;AACvB,UAAM;MAAEC;IAAF,IAAmBC,aAAapB,KAAD;AACrC,UAAM;MAAEqB;MAAYC;MAAQC;MAAMC;MAAMC;IAAlC,IAA+CC,SAAS1B,OAAON,gBAAR;AAE7DiC,oBAAgB;MACdC,OAAO;QACLC,OAAOC,MAAM9B,OAAO,OAAR;QACZG,QAAQ2B,MAAM9B,OAAO,QAAR;QACbc,SAASgB,MAAM9B,OAAO,SAAR;MAHT;IADO,CAAD;AAQf+B,cAAU,MAAA;AAAA,UAAA;AAAA,aAAA,YAAA,MAAA,KAAA;QAAA,SAEC,CACL,gBACA;UACE,wBAAwB/B,MAAMC;QADhC,GAGAkB,aAAaH,KALR;MAFD,GAAA;QAAA,SAAA,MAAA,EAAA,iBAUJE,MAAMX,YAVF,OAAA,SAUJ,eAAA,KAAAW,OAAgB;UAChBG;UACAC;UACAC;UACAC;UACAC,UAAUA,SAAST;QALH,CAAX,CAVD;MAAA,CAAA;IAAA,CAAD;AAoBT,WAAO,CAAA;EACR;AAtDuC,CAAD;",
  "names": ["VChipGroupSymbol", "Symbol", "for", "VChipGroup", "defineComponent", "name", "props", "column", "Boolean", "filter", "valueComparator", "type", "Function", "default", "deepEqual", "makeGroupProps", "selectedClass", "makeTagProps", "makeThemeProps", "makeVariantProps", "variant", "emits", "value", "setup", "slots", "themeClasses", "provideTheme", "isSelected", "select", "next", "prev", "selected", "useGroup", "provideDefaults", "VChip", "color", "toRef", "useRender"]
}
